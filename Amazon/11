void helper(Node *root, vector<int> &v)
{
    if(root==NULL)
    {
        v.push_back(-1);
        return;
    }
    v.push_back(root->data);
    helper(root->left, v);
    helper(root->right, v);
}
vector<int> serialize(Node *root) 
{
    vector<int> v;
    helper(root, v);
    return v;
}
//Function to deserialize a list and construct the tree.
Node* deSe(vector<int> &A, int &i)
{
    if(A[i]==-1 || i==A.size())
    {
        i++;
        return NULL;
    }
    Node *root=new Node(A[i]);
    i++;
    root->left=deSe(A, i);
    root->right=deSe(A, i);
    return root;
}
Node* deSerialize(vector<int> &A)
{
    int i=0;
    return deSe(A, i);
}